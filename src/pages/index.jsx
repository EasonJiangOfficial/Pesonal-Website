import React from "react";
import Head from "next/head";
import Hero from "../components/Hero/hero";
import ProjectsSection from "../components/Projects/projectsSection";
import PageContainer from "../components/Layout/pageContainer";
import AboutMe from "../components/aboutMe";
import {db} from "../lib/firebase"; // Ensure correct import

import {
  collection,
  getDocs,
} from "firebase/firestore";

import BlogSection from "../components/blog/blogSection";

const landingPage = ({projects, blogPosts}) => {
  return (
    <div className="flex flex-col items-center justify-center bg-gradient-to-br from-[rgb(18,24,27)] to-[rgb(32,39,55)]">
      <Head>
        <title>Eason Jiang</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </Head>
      <PageContainer>
        <Hero />
        <AboutMe />
        <ProjectsSection projectsList={projects} />
        <BlogSection blogPosts={blogPosts} />
      </PageContainer>
    </div>
  );
};

export async function getStaticProps() {
  try {
    const projectsSnapshot = await getDocs(collection(db, "Projects"));
    const blogsSnapshot = await getDocs(collection(db, "blog-posts"));

    const projects = projectsSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
    const blogPosts = blogsSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
    return {
      props: {
        projects: projects.length ? projects : [],
        blogPosts: blogPosts.length ? blogPosts : [],
      },
      revalidate: 60, // Revalidate every 60 seconds (optional)
    };
  } catch (error) {
    console.error("Error fetching data:", error);
    return {
      props: {
        projects: [],
        blogPosts: [],
      },
    };
  }
}

export default landingPage;
